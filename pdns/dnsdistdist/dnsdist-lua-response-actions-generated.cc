// !! This file has been generated by dnsdist-rules-generator.py, do not edit by hand!!
luaCtx.writeFunction("AllowResponseAction", []() {
  return dnsdist::actions::getAllowResponseAction();
});
luaCtx.writeFunction("DelayResponseAction", [](uint32_t msec) {
  return dnsdist::actions::getDelayResponseAction(msec);
});
luaCtx.writeFunction("DropResponseAction", []() {
  return dnsdist::actions::getDropResponseAction();
});
luaCtx.writeFunction("LogResponseAction", [](boost::optional<std::string> fileName, boost::optional<bool> append, boost::optional<bool> buffered, boost::optional<bool> verboseOnly, boost::optional<bool> includeTimestamp) {
  return dnsdist::actions::getLogResponseAction(fileName ? *fileName : "", append ? *append : false, buffered ? *buffered : false, verboseOnly ? *verboseOnly : true, includeTimestamp ? *includeTimestamp : false);
});
luaCtx.writeFunction("LuaResponseAction", [](dnsdist::actions::LuaResponseActionFunction function) {
  return dnsdist::actions::getLuaResponseAction(function);
});
luaCtx.writeFunction("LuaFFIResponseAction", [](dnsdist::actions::LuaResponseActionFFIFunction function) {
  return dnsdist::actions::getLuaFFIResponseAction(function);
});
luaCtx.writeFunction("LuaFFIPerThreadResponseAction", [](std::string code) {
  return dnsdist::actions::getLuaFFIPerThreadResponseAction(code);
});
luaCtx.writeFunction("SetExtendedDNSErrorResponseAction", [](uint16_t infoCode, boost::optional<std::string> extraText) {
  return dnsdist::actions::getSetExtendedDNSErrorResponseAction(infoCode, extraText ? *extraText : "");
});
luaCtx.writeFunction("SetReducedTTLResponseAction", [](uint8_t percentage) {
  return dnsdist::actions::getSetReducedTTLResponseAction(percentage);
});
luaCtx.writeFunction("SetSkipCacheResponseAction", []() {
  return dnsdist::actions::getSetSkipCacheResponseAction();
});
luaCtx.writeFunction("SetTagResponseAction", [](std::string tag, std::string value) {
  return dnsdist::actions::getSetTagResponseAction(tag, value);
});
luaCtx.writeFunction("SNMPTrapResponseAction", [](boost::optional<std::string> reason) {
  return dnsdist::actions::getSNMPTrapResponseAction(reason ? *reason : "");
});
luaCtx.writeFunction("TCResponseAction", []() {
  return dnsdist::actions::getTCResponseAction();
});
